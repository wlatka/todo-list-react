{"version":3,"sources":["features/tasks/Form/styled.js","features/tasks/tasksSlice.js","features/tasks/Form/index.js","features/tasks/TaskList/styled.js","features/tasks/TaskList/index.js","features/tasks/Buttons/styled.js","features/tasks/Buttons/index.js","common/Section/styled.js","common/Section/index.js","common/Header/styled.js","common/Header/index.js","common/Container/styled.js","common/Container/index.js","theme.js","features/tasks/Tasks.js","App.js","reportWebVitals.js","store.js","index.js"],"names":["StyledForm","styled","form","Input","input","theme","color","primaryColor","Button","button","white","tasksSlice","createSlice","name","initialState","tasks","hideDone","reducers","addTask","payload","push","toggleHideDone","state","removeTask","index","findIndex","id","splice","toggleTaskDone","done","setAllDone","actions","selectTasks","Form","useState","newTaskContent","setNewTaskContent","inputRef","useRef","dispatch","useDispatch","onSubmit","event","preventDefault","trimmedNewTaskContent","trim","content","nanoid","current","focus","value","ref","required","placeholder","onChange","target","onClick","List","ul","Item","li","hidden","css","Content","span","toggleDone","remove","TaskList","useSelector","map","task","Div","div","Buttons","length","autofocus","disabled","every","StyledSection","section","Header","header","padding","paddingTen","H2","h2","Section","title","body","extraHeaderContent","H1","h1","Main","main","Container","children","TasksPage","App","Tasks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","tasksReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.5f3acc8f.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin: 10px;\r\n    grid-gap: 10px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    flex-grow: 3;\r\n    padding-left: 10px;  \r\n    border: 1px solid ${({ theme }) => theme.color.primaryColor};\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    flex-grow: 1;\r\n    background-color: hsl(180, 100%, 19%);\r\n    color: ${({ theme }) => theme.color.white};\r\n    border-style: none;\r\n    height: 30px;\r\n    text-align: center;\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n    transition: 1.0s;\r\n\r\n    &.hover {\r\n        transform: scale(1.1);\r\n        background-color: hsl(180, 100%, 29%);\r\n    }\r\n\r\n    &.active {\r\n        background: hsl(180, 100%, 34%);\r\n    }\r\n`;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst tasksSlice = createSlice({\r\n    name: 'tasks',\r\n    initialState: {\r\n        tasks: [],\r\n        hideDone: false,\r\n    },\r\n    reducers: {\r\n        addTask: ({ tasks }, { payload }) => {\r\n            tasks.push(payload);\r\n        },\r\n        toggleHideDone: state => {\r\n            state.hideDone = !state.hideDone;\r\n        },\r\n        removeTask: ({ tasks }, { payload }) => {\r\n            const index = tasks.findIndex(({ id }) => id === payload);\r\n            tasks.splice(index, 1)\r\n        },\r\n        toggleTaskDone: ({ tasks }, { payload }) => {\r\n            const index = tasks.findIndex(({ id }) => id === payload);\r\n            tasks[index].done = !tasks[index].done\r\n        },\r\n        setAllDone: ({ tasks }) => {\r\n            for (const task of tasks) {\r\n                task.done = true;\r\n            }\r\n        }\r\n    },\r\n});\r\n\r\nexport const { addTask, removeTask, toggleTaskDone, toggleHideDone, setAllDone } = tasksSlice.actions;\r\nexport const selectTasks = state => state.tasks;\r\nexport default tasksSlice.reducer;","import React, { useState, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\nimport { StyledForm, Input, Button } from \"./styled\";\r\nimport { addTask } from \"../tasksSlice\";\r\n\r\n\r\nconst Form = () => {\r\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n  const inputRef = useRef(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const trimmedNewTaskContent = newTaskContent.trim();\r\n\r\n    if (!trimmedNewTaskContent) {\r\n      return;\r\n    }\r\n\r\n    dispatch(addTask({\r\n      content: trimmedNewTaskContent,\r\n      done: false,\r\n      id: nanoid(),\r\n    }));\r\n\r\n    setNewTaskContent(\"\");\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  const focusInput = () => {\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <StyledForm onSubmit={onFormSubmit}>\r\n      <Input\r\n        value={newTaskContent}\r\n        ref={inputRef}\r\n        required\r\n        placeholder=\"Zadania na dziÅ›!\"\r\n        onChange={({ target }) => setNewTaskContent(target.value)}\r\n      />\r\n      <Button onClick={focusInput}>Dodaj zadanie</Button>\r\n    </StyledForm>\r\n  );\r\n};\r\n\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    display: grid;\r\n    padding: 10px;\r\n    grid-template-columns: auto 1fr auto;\r\n    grid-gap: 10px;\r\n    border-bottom: 1px solid rgb(233, 233, 233);\r\n    align-items: center;\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\nfont-size: 16px;\r\n    ${({ done }) => done && css`\r\n        text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    border: none;\r\n    color: white;\r\n    width: 30px;\r\n    height: 30px;\r\n    padding: 0;\r\n    transition: background 0.3s;\r\n\r\n    ${({ toggleDone }) => toggleDone && css`\r\n        background: hsl(120, 100%, 24%);\r\n        &:hover {\r\n            background: hsl(120, 100%, 34%);\r\n        }\r\n    `}\r\n\r\n    ${({ remove }) => remove && css`\r\n        background: hsl(348, 83%, 42%); \r\n        &:hover {\r\n            background: hsl(348, 83%, 58%);\r\n        }\r\n        &:active {\r\n            background: hsl(348, 83%, 62%);\r\n        }\r\n    `}\r\n`;","import { List, Item, Content, Button } from \"./styled\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectTasks, toggleTaskDone, removeTask } from \"../tasksSlice\";\r\n\r\nconst TaskList = () => {\r\n\r\n    const { tasks, hideDone } = useSelector(selectTasks);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <List>\r\n            {tasks.map(task => (\r\n                <Item\r\n                    key={task.id}\r\n                    hidden={task.done && hideDone}\r\n                >\r\n                    <Button\r\n                        toggleDone\r\n                        onClick={() => dispatch(toggleTaskDone(task.id))}\r\n                    >\r\n                        {task.done ? \"âœ“\" : \"\"}\r\n                    </Button>\r\n\r\n                    <Content done={task.done}>\r\n                        - {task.content}\r\n                    </Content>\r\n\r\n                    <Button\r\n                        remove\r\n                        onClick={() => dispatch(removeTask(task.id))}\r\n                    >\r\n                        ðŸ—‘\r\n                    </Button>\r\n                </Item>\r\n            ))}\r\n        </List >\r\n    )\r\n};\r\n\r\nexport default TaskList;","import styled from \"styled-components\";\r\n\r\nexport const Div = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    background: transparent;\r\n    color: ${({ theme }) => theme.color.primaryColor};\r\n    border: none;\r\n    margin: 0 0 0 20px;\r\n    transition: color 0.3s;\r\n    font-size: 14px;\r\n\r\n    &.hover {\r\n    color: hsl(180, 100%, 35%);\r\n    }\r\n\r\n    &.disabled {\r\n    color: #ccc;\r\n    }\r\n\r\n    @media(max-width: 767px) {\r\n        flex-basis: 100%;\r\n        margin: 10px;\r\n    }\r\n`;","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectTasks, toggleHideDone, setAllDone } from \"../tasksSlice\";\r\nimport { Div, Button } from \"./styled\";\r\n\r\nconst Buttons = () => {\r\n    const { tasks, hideDone } = useSelector(selectTasks);\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <Div>\r\n            {tasks.length > 0 && (\r\n                <>\r\n                    <Button\r\n                        onClick={() => dispatch(toggleHideDone())}\r\n                    >\r\n                        {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} zakoÅ„czone\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => dispatch(setAllDone())}\r\n                        autofocus\r\n                        disabled={tasks.every(({ done }) => done)}\r\n                    >\r\n                        ZakoÅ„cz wszystkie\r\n                    </Button>\r\n                </>\r\n            )}\r\n        </Div>\r\n    )\r\n};\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const StyledSection = styled.section`\r\n    padding: 20px;\r\n    margin: 10px 0;\r\n    background-color: white;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n    grid-gap: 20px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    font-size: 22px;\r\n    padding: ${({theme})=> theme.padding.paddingTen};\r\n    border-bottom: 1px solid rgb(233, 233, 233);\r\n\r\n  @media(max-width:700px) {\r\n        grid-template-columns: auto;\r\n        grid-gap: 10px;\r\n  }\r\n`;\r\n\r\nexport const H2 = styled.h2`\r\n  font-size: 20px;\r\n  margin: 0;\r\n`;\r\n\r\nexport const Div = styled.div`\r\n  padding: ${({theme})=> theme.padding.paddingTen};\r\n  display: grid;\r\n`;","import { StyledSection, Header, H2, Div } from \"./styled\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n  <StyledSection>\r\n    <Header>\r\n      <H2>{title}</H2>\r\n      {extraHeaderContent}\r\n    </Header>\r\n    <Div>\r\n      {body}\r\n    </Div>\r\n  </StyledSection>\r\n);\r\n\r\nexport default Section;","import styled from \"styled-components\";\r\n\r\nexport const H1 = styled.h1`\r\n  margin: 20px;\r\n  padding: 20px;\r\n  font-size: 30px;\r\n`;","import { H1 } from \"./styled\";\r\n\r\nconst Header = ({ title }) => (\r\n    <H1>{title}</H1>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const Main = styled.main`\r\n  max-width: 900px;\r\n  padding: 0px;\r\n  margin: 0 auto;\r\n`;","import { Main } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <Main>\r\n        {children}\r\n    </Main>\r\n);\r\n\r\nexport default Container;","export const theme = {\r\n    padding: {\r\n        paddingTen: \"10px\",\r\n    },\r\n\r\n    color: {\r\n        white: \"white\",\r\n        primaryColor: \"teal\",\r\n    },\r\n};","import Form from \"./Form\";\nimport Tasks from \"./TaskList\";\nimport Buttons from \"./Buttons\";\nimport Section from \"../../common/Section\";\nimport Header from \"../../common/Header\";\nimport Container from \"../../common/Container\";\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"../../theme\";\n\nfunction TasksPage() {\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container>\n        <Header title=\"Lista ZadaÅ„\" />\n        <Section\n          title=\"Dodaj nowe zadanie\"\n          body={<Form />} />\n        <Section\n          title=\"Lista zadaÅ„\"\n          body={<Tasks />}\n          extraHeaderContent={<Buttons />} />\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default TasksPage;","import TasksPage from \"./features/tasks/Tasks\";\r\n\r\nexport const App = () => <TasksPage />;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport tasksReducer from './features/tasks/tasksSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        tasks: tasksReducer,\r\n    },\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { ThemeProvider } from 'styled-components';\nimport './index.css';\nimport { App } from \"./App\";\nimport reportWebVitals from './reportWebVitals';\nimport { theme } from \"./theme\";\nimport store from \"./store\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}