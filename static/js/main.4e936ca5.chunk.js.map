{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","addNewTask","useState","newTaskContent","setNewTaskContent","className","onSubmit","event","preventDefault","trim","value","autofocus","required","placeholder","onChange","target","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","done","onClick","id","content","Buttons","toggleHideDone","setAllDone","length","disabled","every","Section","title","body","extraHeaderContent","Header","Container","children","App","setHideDone","setTasks","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e936ca5.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        addNewTask(newTaskContent.trim());\r\n        setNewTaskContent(\"\");\r\n    };\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={onFormSubmit}>\r\n            <input\r\n                value={newTaskContent}\r\n                className=\"form__input\"\r\n                autofocus\r\n                required\r\n                placeholder=\"Zadania na dziÅ›!\"\r\n                onChange={({ target }) => setNewTaskContent(target.value)}\r\n            />\r\n            <button className=\"form__button\">Dodaj zadanie</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import \"./style.css\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n    <ul className=\"tasks\">\r\n        {tasks.map(task => (\r\n            <li\r\n                key={task.id}\r\n                className={`tasks__item ${task.done && hideDone ? \"tasks__item--hidden\" : \"\"}`}\r\n            >\r\n                <button\r\n                    className=\"tasks__button tasks__button--toggleDone\"\r\n                    onClick={() => toggleTaskDone(task.id)}\r\n                >\r\n                    {task.done ? \"âœ“\" : \"\"}\r\n                </button>\r\n                <span className={`tasks__content ${task.done ? \"tasks__content--done\" : \"\"}`}>\r\n                   {task.id} - {task.content}\r\n                </span>\r\n                <button\r\n                    onClick={() => removeTask(task.id)}\r\n                    className=\"tasks__button tasks__button--remove\"\r\n                >\r\n                    ðŸ—‘\r\n                </button>\r\n            </li>\r\n        ))}\r\n    </ul >\r\n);\r\n\r\nexport default Tasks;","import \"./style.css\";\r\nimport React, { Fragment } from \"react\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n    <div className=\"buttons\">\r\n        {tasks.length > 0 && (\r\n            <Fragment>\r\n                <button onClick={toggleHideDone} className=\"buttons__button\">\r\n                    {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} zakoÅ„czone\r\n                </button>\r\n                <button\r\n                    onClick={setAllDone}\r\n                    className=\"buttons__button\"\r\n                    autofocus\r\n                    disabled={tasks.every(({ done }) => done)}\r\n                >\r\n                    ZakoÅ„cz wszystkie\r\n                </button>\r\n            </Fragment>\r\n        )}\r\n    </div>\r\n)\r\n\r\nexport default Buttons;","import \"./style.css\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n    <section className=\"section\">\r\n        <header className=\"section__header\">\r\n            <h2 className=\"section__title\">{title}</h2>\r\n            {extraHeaderContent}\r\n        </header>\r\n        <div className=\"section__body\">\r\n            {body}\r\n        </div>\r\n    </section>\r\n);\r\n\r\nexport default Section;","import \"./style.css\";\r\n\r\nconst Header = ({ title }) => (\r\n    <h1 className=\"header\">{title}</h1>\r\n);\r\n\r\nexport default Header;","import \"./style.css\";\r\n\r\nconst Container = ({children}) => (\r\n    <main className=\"container\">\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\nimport { useState } from \"react\";\n\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n  const [tasks, setTasks] = useState([\n    { id: 1, content: \"PrzejÅ›Ä‡ na Reacta\", done: false },\n    { id: 2, content: \"SkosiÄ‡ trawÄ™\", done: true },\n  ]);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n\n  const removeTask = (id) => {\n    setTasks(tasks => tasks.filter(task => task.id !== id));\n  };\n\n  const toggleTaskDone = (id) => {\n    setTasks(tasks => tasks.map(task => {\n      if (task.id === id) {\n        return { ...task, done: !task.done };\n      };\n\n      return task;\n    }));\n  };\n\n  const setAllDone = () => {\n    setTasks(task => task.map(task => ({\n      ...task,\n      done: true,\n    })));\n  };\n\n  const addNewTask = (content) => {\n    setTasks(tasks => [\n      ...tasks,\n      {\n        content,\n        done: false,\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\n      },\n    ]);\n};\n\n\nreturn (\n\n  <Container>\n    <Header title=\"Lista ZadaÅ„\" />\n\n    <Section\n      title=\"Dodaj nowe zadanie\"\n      body={<Form addNewTask={addNewTask} />}\n    />\n\n    <Section\n      title=\"Lista zadaÅ„\"\n      body={\n        <Tasks\n          tasks={tasks}\n          hideDone={hideDone}\n          removeTask={removeTask}\n          toggleTaskDone={toggleTaskDone} />\n      }\n      extraHeaderContent={\n        <Buttons\n          tasks={tasks}\n          hideDone={hideDone}\n          toggleHideDone={toggleHideDone}\n          setAllDone={setAllDone}\n        />\n      }\n    />\n  </Container>\n);\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}