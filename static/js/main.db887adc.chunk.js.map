{"version":3,"sources":["Form/styled.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/styled.js","Header/index.js","Container/styled.js","Container/index.js","theme.js","App.js","reportWebVitals.js","index.js"],"names":["StyledForm","styled","form","Input","input","theme","color","primaryColor","Button","button","white","Form","addNewTask","useState","newTaskContent","setNewTaskContent","inputRef","useRef","onSubmit","event","preventDefault","trim","value","ref","required","placeholder","onChange","target","onClick","current","focus","List","ul","Item","li","hidden","css","Content","span","done","toggleDone","remove","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","id","content","Div","div","Buttons","toggleHideDone","setAllDone","length","autofocus","disabled","every","StyledSection","section","Header","header","padding","paddingTen","H2","h2","Section","title","body","extraHeaderContent","H1","h1","Main","main","Container","children","getInitialTasks","tasksFromLocalStorage","localStorage","getItem","JSON","parse","App","setHideDone","setTasks","useEffect","setItem","stringify","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db887adc.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin: 10px;\r\n    grid-gap: 10px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    flex-grow: 3;\r\n    padding-left: 10px;  \r\n    border: 1px solid ${({ theme }) => theme.color.primaryColor};\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    flex-grow: 1;\r\n    background-color: hsl(180, 100%, 19%);\r\n    color: ${({ theme }) => theme.color.white};\r\n    border-style: none;\r\n    height: 30px;\r\n    text-align: center;\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n    transition: 1.0s;\r\n\r\n    &.hover {\r\n        transform: scale(1.1);\r\n        background-color: hsl(180, 100%, 29%);\r\n    }\r\n\r\n    &.active {\r\n        background: hsl(180, 100%, 34%);\r\n    }\r\n`;","import React, { useState, useRef } from \"react\";\r\nimport { StyledForm, Input, Button } from \"./styled\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    addNewTask(newTaskContent.trim());\r\n    setNewTaskContent(\"\");\r\n  };\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  const focusInput = () => {\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <StyledForm onSubmit={onFormSubmit}>\r\n      <Input\r\n        value={newTaskContent}\r\n        ref={inputRef}\r\n        required\r\n        placeholder=\"Zadania na dziÅ›!\"\r\n        onChange={({ target }) => setNewTaskContent(target.value)}\r\n      />\r\n      <Button onClick={focusInput}>Dodaj zadanie</Button>\r\n    </StyledForm>\r\n  );\r\n};\r\n\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    display: grid;\r\n    padding: 10px;\r\n    grid-template-columns: auto 1fr auto;\r\n    grid-gap: 10px;\r\n    border-bottom: 1px solid rgb(233, 233, 233);\r\n    align-items: center;\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\nfont-size: 16px;\r\n    ${({ done }) => done && css`\r\n        text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    border: none;\r\n    color: white;\r\n    width: 30px;\r\n    height: 30px;\r\n    padding: 0;\r\n    transition: background 0.3s;\r\n\r\n    ${({ toggleDone }) => toggleDone && css`\r\n        background: hsl(120, 100%, 24%);\r\n        &:hover {\r\n            background: hsl(120, 100%, 34%);\r\n        }\r\n    `}\r\n\r\n    ${({ remove }) => remove && css`\r\n        background: hsl(348, 83%, 42%); \r\n        &:hover {\r\n            background: hsl(348, 83%, 58%);\r\n        }\r\n        &:active {\r\n            background: hsl(348, 83%, 62%);\r\n        }\r\n    `}\r\n\r\n`;","import { List, Item, Content, Button } from \"./styled\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n    <List>\r\n        {tasks.map(task => (\r\n            <Item\r\n                key={task.id}\r\n                hidden={task.done && hideDone}\r\n            >\r\n                <Button \r\n                    toggleDone\r\n                    onClick={() => toggleTaskDone(task.id)}\r\n                >\r\n                    {task.done ? \"âœ“\" : \"\"}\r\n                </Button>\r\n\r\n                <Content done={task.done}>\r\n                - {task.content}\r\n                </Content>\r\n\r\n                <Button \r\n                    remove\r\n                    onClick={() => removeTask(task.id)}\r\n                >\r\n                    ðŸ—‘\r\n                </Button>\r\n            </Item>\r\n        ))}\r\n    </List >\r\n);\r\n\r\nexport default Tasks;","import styled from \"styled-components\";\r\n\r\nexport const Div = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    background: transparent;\r\n    color: ${({ theme }) => theme.color.primaryColor};\r\n    border: none;\r\n    margin: 0 0 0 20px;\r\n    transition: color 0.3s;\r\n    font-size: 14px;\r\n\r\n    &.hover {\r\n    color: hsl(180, 100%, 35%);\r\n    }\r\n\r\n    &.disabled {\r\n    color: #ccc;\r\n    }\r\n\r\n    @media(max-width: 767px) {\r\n        flex-basis: 100%;\r\n        margin: 10px;\r\n    }\r\n`;","import React from \"react\";\r\nimport { Div, Button } from \"./styled\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n    <Div>\r\n        {tasks.length > 0 && (\r\n            <>\r\n                <Button \r\n                    onClick={toggleHideDone}\r\n                >\r\n                  {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} zakoÅ„czone\r\n                </Button>\r\n                <Button\r\n                    onClick={setAllDone}\r\n                    autofocus\r\n                    disabled={tasks.every(({ done }) => done)}\r\n                >\r\n                  ZakoÅ„cz wszystkie\r\n                </Button>\r\n            </>\r\n        )}\r\n    </Div>\r\n);\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const StyledSection = styled.section`\r\n    padding: 20px;\r\n    margin: 10px 0;\r\n    background-color: white;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n    grid-gap: 20px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    font-size: 22px;\r\n    padding: ${({theme})=> theme.padding.paddingTen};\r\n    border-bottom: 1px solid rgb(233, 233, 233);\r\n\r\n  @media(max-width:700px) {\r\n        grid-template-columns: auto;\r\n        grid-gap: 10px;\r\n  }\r\n`;\r\n\r\nexport const H2 = styled.h2`\r\n  font-size: 20px;\r\n  margin: 0;\r\n`;\r\n\r\nexport const Div = styled.div`\r\n  padding: ${({theme})=> theme.padding.paddingTen};\r\n  display: grid;\r\n`;","import { StyledSection, Header, H2, Div } from \"./styled\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n  <StyledSection>\r\n    <Header>\r\n      <H2>{title}</H2>\r\n      {extraHeaderContent}\r\n    </Header>\r\n    <Div>\r\n      {body}\r\n    </Div>\r\n  </StyledSection>\r\n);\r\n\r\nexport default Section;","import styled from \"styled-components\";\r\n\r\nexport const H1 = styled.h1`\r\n  margin: 20px;\r\n  padding: 20px;\r\n  font-size: 30px;\r\n`;","import { H1 } from \"./styled\";\r\n\r\nconst Header = ({ title }) => (\r\n    <H1>{title}</H1>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const Main = styled.main`\r\n  max-width: 900px;\r\n  padding: 0px;\r\n  margin: 0 auto;\r\n`;","import { Main } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <Main>\r\n        {children}\r\n    </Main>\r\n);\r\n\r\nexport default Container;","export const theme = {\r\n    padding: {\r\n        paddingTen: \"10px\",\r\n    },\r\n\r\n    color: {\r\n        white: \"white\",\r\n        primaryColor: \"teal\",\r\n    },\r\n};","import Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\nimport { useEffect, useState } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"./theme\";\n\n\nconst getInitialTasks = () => {\n  const tasksFromLocalStorage = localStorage.getItem(\"tasks\");\n\n  return tasksFromLocalStorage\n    ? JSON.parse(tasksFromLocalStorage)\n    : [];\n};\n\nfunction App() {\n\n  const [hideDone, setHideDone] = useState(false);\n  const [tasks, setTasks] = useState(getInitialTasks);\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n\n  const removeTask = (id) => {\n    setTasks(tasks => tasks.filter(task => task.id !== id));\n  };\n\n  const toggleTaskDone = (id) => {\n    setTasks(tasks => tasks.map(task => {\n      if (task.id === id) {\n        return { ...task, done: !task.done };\n      };\n\n      return task;\n    }));\n  };\n\n  const setAllDone = () => {\n    setTasks(task => task.map(task => ({\n      ...task,\n      done: true,\n    })));\n  };\n\n  const addNewTask = (content) => {\n    setTasks(tasks => [\n      ...tasks,\n      {\n        content,\n        done: false,\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\n      },\n    ]);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n    <Container>\n      <Header title=\"Lista ZadaÅ„\" />\n\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={<Form addNewTask={addNewTask} />}\n      />\n\n      <Section\n        title=\"Lista zadaÅ„\"\n        body={\n          <Tasks\n            tasks={tasks}\n            hideDone={hideDone}\n            removeTask={removeTask}\n            toggleTaskDone={toggleTaskDone} />\n        }\n        extraHeaderContent={\n          <Buttons\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone}\n          />\n        }\n      />\n    </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { theme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}